<<<<<<< HEAD
tmp/
pgdata/
sha/

### Project-specific
doc/_build/
supply.cfg
/files/*
!/files/.gitkeep
docker-compose.override.yml
celerybeat-schedule

### Python ###
=======
>>>>>>> 43b9718519bb076fbca2d35b9a602d93c1a61e2c
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
<<<<<<< HEAD
.pytest_cache/
=======
>>>>>>> 43b9718519bb076fbca2d35b9a602d93c1a61e2c

# C extensions
*.so

# Distribution / packaging
.Python
<<<<<<< HEAD
env/
=======
>>>>>>> 43b9718519bb076fbca2d35b9a602d93c1a61e2c
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
<<<<<<< HEAD
*.egg-info/
.installed.cfg
*.egg
=======
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
>>>>>>> 43b9718519bb076fbca2d35b9a602d93c1a61e2c

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
<<<<<<< HEAD
=======
.nox/
>>>>>>> 43b9718519bb076fbca2d35b9a602d93c1a61e2c
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
<<<<<<< HEAD
*,cover
.hypothesis/
results.xml
=======
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
>>>>>>> 43b9718519bb076fbca2d35b9a602d93c1a61e2c

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
<<<<<<< HEAD
=======
db.sqlite3
db.sqlite3-journal
>>>>>>> 43b9718519bb076fbca2d35b9a602d93c1a61e2c

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

<<<<<<< HEAD
# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule*

# dotenv
.env

# virtualenv
.venv/
venv/
ENV/

# Spyder project settings
.spyderproject
=======
# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject
>>>>>>> 43b9718519bb076fbca2d35b9a602d93c1a61e2c

# Rope project settings
.ropeproject

<<<<<<< HEAD
# End of https://www.gitignore.io/api/python

# Jetbrains (PyCharm)
.idea/

# Visual Studio Code
.vscode/*

# MacOS
.DS_Store

# profiler
.profile

# mypy
.mypy_cache

# azure
.azure

git@github.com:nayanex/AI-Engineer-using-Microsoft-Azure-Nanodegree-Program.git
=======
# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
>>>>>>> 43b9718519bb076fbca2d35b9a602d93c1a61e2c
